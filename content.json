{"meta":{"title":"Ugvol","subtitle":"","description":"","author":"Ugvol","url":"https://Ugvol.github.io","root":"/"},"pages":[{"title":"tags","date":"2020-06-30T10:21:07.000Z","updated":"2020-06-30T10:21:35.427Z","comments":false,"path":"tags/index.html","permalink":"https://ugvol.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-06-30T09:14:25.000Z","updated":"2020-06-30T10:22:45.090Z","comments":false,"path":"categories/index.html","permalink":"https://ugvol.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"grid布局","slug":"grid布局","date":"2020-05-30T09:51:55.000Z","updated":"2020-07-01T11:50:11.880Z","comments":true,"path":"2020/05/30/grid布局/","link":"","permalink":"https://ugvol.github.io/2020/05/30/grid%E5%B8%83%E5%B1%80/","excerpt":"","text":"grid布局","categories":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/tags/css/"}]},{"title":"滚动视差","slug":"滚动视差","date":"2020-04-30T09:26:54.000Z","updated":"2020-07-02T09:50:08.991Z","comments":true,"path":"2020/04/30/滚动视差/","link":"","permalink":"https://ugvol.github.io/2020/04/30/%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%B7%AE/","excerpt":"","text":"什么是滚动视差视差滚动（Parallax Scrolling）是指让多层背景以不同的速度移动，形成立体的运动效果。滚动屏幕时，网页中元素的位置会发生变化。但是不同的元素位置变化的速度不同，导致网页中产生分层元素的错觉。 如何实现滚动视差1.通过css的background-attachment属性 background-attachment属性决定背景图像的位置是在视口内固定，还是随着包含它的区块滚动。它有三个属性： fixed: 背景相对于视口固定 scroll: 背景相对于元素内容固定 local: 背景回随着元素内容滚动 实现方式与代码示例： 给子元素添加background-attachment: fixed 12345678910111213141516171819202122232425262728293031&#x2F;&#x2F; html&lt;div class&#x3D;&quot;father&quot;&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;1&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;2&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;3&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;4&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;5&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&#x2F;&#x2F; css.father,.childrens&#123; width: 100vw; height: 100vh; background-color: cornflowerblue; text-align: center; line-height: 100vh; font-size: 30px; color: #ffffff;&#125;.childrens:first-child&#123; background: url(&#39;&#39;) center center &#x2F; cover; background-attachment: fixed;&#125;.childrens:nth-child(3)&#123; background: url(&#39;&#39;) center center &#x2F; cover; background-attachment: fixed;&#125;.childrens:nth-child(5)&#123; background: url(&#39;&#39;) center center &#x2F; cover; background-attachment: fixed;&#125; 2.通过css3的transform:translate3d&nbsp;&nbsp;&nbsp;&nbsp;1).父元素设置transform-style: preserve-3d;使子元素将保留其 3D 位置。&nbsp;&nbsp;&nbsp;&nbsp;2).父元素设置perspective: x px;定义 3D 元素距视图的距离&nbsp;&nbsp;&nbsp;&nbsp;3).子元素设置分别设置不同的transform: translateZ()，这样不同子元素在 3D Z 轴方向距离屏幕的距离也就不一样; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&#x2F;&#x2F; html&lt;div class&#x3D;&quot;father&quot;&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;1&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;2&lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;childrens&quot;&gt;3&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;bottom&quot;&gt;&lt;&#x2F;div&gt;&#x2F;&#x2F; csshtml &#123; overflow: hidden; height: 100%; &#125; body &#123; height: 100%; padding: 0; margin: 0; transform-style: preserve-3d; perspective: 1px; overflow-y: scroll; overflow-x: hidden;&#125;.father &#123; width: 100vw; height: 200vh; background: cornflowerblue;&#125;.childrens:first-child &#123; width: 100vw; height: 100vh; background: #8368ff; transform: translateZ(0px); margin-bottom: 50px;&#125;.childrens:nth-child(2) &#123; width: 100vw; height: 100vh; background: #67c23a; transform: translateZ(-1px); margin-bottom: 50px;&#125;.childrens:nth-child(3) &#123; width: 100vw; height: 100vh; background: #e6a23c; transform: translateZ(-2px);&#125;.bottom&#123; width: 100%; height: 200vh; background-color:cornflowerblue;&#125; 3、react使用：react-scroll-parallaxGitHub：https://github.com/jscottsmith/react-scroll-parallax4、vue使用：vue-parallaxGitHub：https://github.com/apertureless/vue-parallax 参考文章：https://juejin.im/post/5e08b0f4e51d4557ec0317fd?utm_source=gold_browser_extension","categories":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/tags/css/"}]}],"categories":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/categories/css/"}],"tags":[{"name":"css","slug":"css","permalink":"https://ugvol.github.io/tags/css/"}]}